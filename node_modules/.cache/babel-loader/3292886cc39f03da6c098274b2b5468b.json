{"ast":null,"code":"var _jsxFileName = \"/home/joshua/finals-homeworks/guided-capstone-project-starter-code/guided-capstone-project/src/pages/Planets/Planets.js\";\n// import {useState, useEffect, useContext} from \"react\";\n\n// import styles from \"./Planets.module.css\";\n// import {LoadingContext} from \"../../context/LoadingProvider\";\n// import SpaceTravelApi from \"../../services/SpaceTravelApi\";\n\n// function Planets ()\n// {\n\n//   return (\n//     <>\n//       <div>\n//         Y esta tambien?\n//       </div>\n//     </>\n//   );\n// }\n\n// export default Planets;\n\n//------------\n// PersonajesList.js\nimport React, { useState, useEffect } from 'react';\nimport { FaVenus, FaMars, FaGenderless } from 'react-icons/fa';\nimport './PersonajesList.css';\nconst PersonajesList = () => {\n  const [personajes, setPersonajes] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [personajesPerPage] = useState(5);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Reemplaza la URL con la URL de tu API\n        const response = await fetch('https://tu-api.com/personajes');\n        const data = await response.json();\n        setPersonajes(data);\n      } catch (error) {\n        console.error('Error al obtener los datos de la API', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const indexOfLastPersonaje = currentPage * personajesPerPage;\n  const indexOfFirstPersonaje = indexOfLastPersonaje - personajesPerPage;\n  const currentPersonajes = personajes.slice(indexOfFirstPersonaje, indexOfLastPersonaje);\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"personajes-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, currentPersonajes.map((personaje, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"personaje-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, personaje.nombre || personaje.alias || 'Nombre Desconocido'), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"Cultura: \", personaje.cultura), personaje.genero === 'Masculino' ? /*#__PURE__*/React.createElement(FaMars, {\n    className: \"gender-icon male\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }) : personaje.genero === 'Femenino' ? /*#__PURE__*/React.createElement(FaVenus, {\n    className: \"gender-icon female\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(FaGenderless, {\n    className: \"gender-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pagination\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, Array.from({\n    length: Math.ceil(personajes.length / personajesPerPage)\n  }, (_, index) => /*#__PURE__*/React.createElement(\"button\", {\n    key: index,\n    onClick: () => paginate(index + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, index + 1))));\n};\nexport default PersonajesList;","map":{"version":3,"names":["React","useState","useEffect","FaVenus","FaMars","FaGenderless","PersonajesList","personajes","setPersonajes","currentPage","setCurrentPage","personajesPerPage","fetchData","response","fetch","data","json","error","console","indexOfLastPersonaje","indexOfFirstPersonaje","currentPersonajes","slice","paginate","pageNumber","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","personaje","index","key","nombre","alias","cultura","genero","Array","from","length","Math","ceil","_","onClick"],"sources":["/home/joshua/finals-homeworks/guided-capstone-project-starter-code/guided-capstone-project/src/pages/Planets/Planets.js"],"sourcesContent":["// import {useState, useEffect, useContext} from \"react\";\n\n\n// import styles from \"./Planets.module.css\";\n// import {LoadingContext} from \"../../context/LoadingProvider\";\n// import SpaceTravelApi from \"../../services/SpaceTravelApi\";\n\n// function Planets ()\n// {\n  \n//   return (\n//     <>\n//       <div>\n//         Y esta tambien?\n//       </div>\n//     </>\n//   );\n// }\n\n// export default Planets;\n\n//------------\n// PersonajesList.js\nimport React, { useState, useEffect } from 'react';\nimport { FaVenus, FaMars, FaGenderless } from 'react-icons/fa';\nimport './PersonajesList.css';\n\nconst PersonajesList = () => {\n  const [personajes, setPersonajes] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [personajesPerPage] = useState(5);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Reemplaza la URL con la URL de tu API\n        const response = await fetch('https://tu-api.com/personajes');\n        const data = await response.json();\n        setPersonajes(data);\n      } catch (error) {\n        console.error('Error al obtener los datos de la API', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const indexOfLastPersonaje = currentPage * personajesPerPage;\n  const indexOfFirstPersonaje = indexOfLastPersonaje - personajesPerPage;\n  const currentPersonajes = personajes.slice(indexOfFirstPersonaje, indexOfLastPersonaje);\n\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  return (\n    <div className=\"personajes-list\">\n      {currentPersonajes.map((personaje, index) => (\n        <div key={index} className=\"personaje-item\">\n          <p>{personaje.nombre || personaje.alias || 'Nombre Desconocido'}</p>\n          <p>Cultura: {personaje.cultura}</p>\n          {personaje.genero === 'Masculino' ? (\n            <FaMars className=\"gender-icon male\" />\n          ) : personaje.genero === 'Femenino' ? (\n            <FaVenus className=\"gender-icon female\" />\n          ) : (\n            <FaGenderless className=\"gender-icon\" />\n          )}\n        </div>\n      ))}\n      <div className=\"pagination\">\n        {Array.from({ length: Math.ceil(personajes.length / personajesPerPage) }, (_, index) => (\n          <button key={index} onClick={() => paginate(index + 1)}>\n            {index + 1}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default PersonajesList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
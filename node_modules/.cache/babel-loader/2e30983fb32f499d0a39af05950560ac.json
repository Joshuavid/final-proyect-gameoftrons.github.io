{"ast":null,"code":"var _jsxFileName = \"/home/joshua/finals-homeworks/guided-capstone-project-starter-code/guided-capstone-project/src/pages/Planets/Planets.js\";\nimport { useState, useEffect, useContext } from \"react\";\nimport React from \"react\";\nimport styles from \"./Planets.module.css\";\nimport { LoadingContext } from \"../../context/LoadingProvider\";\n// import SpaceTravelApi from \"../../services/SpaceTravelApi\";\n\nfunction Planets() {\n  // const [planetsWithSpacecrafts, setPlanetsWithSpacecrafts] = useState([]);\n  // const {isLoading, enableLoading, disableLoading} = useContext(LoadingContext);\n  // const [selectedPlanetId, setSelectedPlanetId] = useState();\n  // const [selectedSpacecraftId, setSelectedSpacecraftId] = useState();\n\n  // async function getPlanetsWithSpacecrafts ()\n  // {\n  //   const {data: planets, isError: isErrorPlanets} = await SpaceTravelApi.getPlanets();\n  //   const {data: spacecrafts, isError: isErrorSpacecrafts} = await SpaceTravelApi.getSpacecrafts();\n\n  //   if (!isErrorPlanets && !isErrorSpacecrafts)\n  //   {\n  //     for (const planet of planets)\n  //     {\n  //       planet.spacecrafts = [];\n\n  //       for (const spacecraft of spacecrafts)\n  //       {\n  //         if (planet.id === spacecraft.currentLocation)\n  //         {\n  //           planet.spacecrafts.push(spacecraft);\n  //         }\n  //       }\n  //     }\n\n  //     setPlanetsWithSpacecrafts(planets);\n  //   }\n  // }\n\n  // useEffect(() =>\n  //           {\n  //             async function runGetPlanetsWithSpacecrafts ()\n  //             {\n  //               enableLoading();\n  //               await getPlanetsWithSpacecrafts();\n  //               disableLoading();\n  //             }\n\n  //             runGetPlanetsWithSpacecrafts();\n  //           },\n  //           [enableLoading, disableLoading]\n  // );\n\n  // function handleClickOfPlanet (event, id)\n  // {\n  //   if (!isLoading)\n  //   {\n  //     setSelectedPlanetId(id);\n  //   }\n  // }\n\n  // async function handleClickOfSpacecraft (event, spacecraftId, planetId)\n  // {\n  //   if (!isLoading && Number.isInteger(selectedPlanetId) && selectedPlanetId !== planetId)\n  //   {\n  //     setSelectedSpacecraftId(spacecraftId);\n\n  //     enableLoading();\n\n  //     const {isError} = await SpaceTravelApi.sendSpacecraftToPlanet({spacecraftId, targetPlanetId: selectedPlanetId});\n  //     if (!isError)\n  //     {\n  //       await getPlanetsWithSpacecrafts();\n  //       setSelectedPlanetId(null);\n  //       setSelectedSpacecraftId(null);\n  //     }\n\n  //     disableLoading();\n  //   }\n  // }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, planetsWithSpacecrafts.map((planet, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: styles[\"planetWithSpacecrafts\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `${styles[\"planet\"]} ${selectedPlanetId === planet.id && styles[\"planet--selected\"]}`,\n    onClick: event => handleClickOfPlanet(event, planet.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles[\"planet__imageContainer\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: planet.pictureUrl,\n    alt: `The planet ${planet.name}`,\n    className: styles[\"planet__image\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles[\"planet__info\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 19\n    }\n  }, planet.name), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 19\n    }\n  }, planet.currentPopulation))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles[\"planet__spacecrafts\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, planet.spacecrafts.map((spacecraft, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: `${styles[\"planet__spacecraft\"]} ${selectedSpacecraftId === spacecraft.id && styles[\"planet__spacecraft--selected\"]}`,\n    onClick: event => handleClickOfSpacecraft(event, spacecraft.id, planet.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 44\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles[\"planet__spacecraft__imageContainer\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 46\n    }\n  }, spacecraft.pictureUrl ? /*#__PURE__*/React.createElement(\"img\", {\n    src: spacecraft.pictureUrl,\n    alt: `The spacecraft ${spacecraft.name}`,\n    className: styles[\"planet__spacecraft__image\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 50\n    }\n  }) : /*#__PURE__*/React.createElement(\"span\", {\n    className: styles[\"planet__spacecraft__image--default\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 50\n    }\n  }, \"\\uD83D\\uDE80\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"planet__spacecraft__info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 46\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 48\n    }\n  }, spacecraft.name), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 48\n    }\n  }, spacecraft.capacity))))))));\n}\nexport default Planets;","map":{"version":3,"names":["useState","useEffect","useContext","React","styles","LoadingContext","Planets","createElement","Fragment","planetsWithSpacecrafts","map","planet","index","key","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","selectedPlanetId","id","onClick","event","handleClickOfPlanet","src","pictureUrl","alt","name","currentPopulation","spacecrafts","spacecraft","selectedSpacecraftId","handleClickOfSpacecraft","capacity"],"sources":["/home/joshua/finals-homeworks/guided-capstone-project-starter-code/guided-capstone-project/src/pages/Planets/Planets.js"],"sourcesContent":["import {useState, useEffect, useContext} from \"react\";\nimport React from \"react\";\n\nimport styles from \"./Planets.module.css\";\nimport {LoadingContext} from \"../../context/LoadingProvider\";\n// import SpaceTravelApi from \"../../services/SpaceTravelApi\";\n\nfunction Planets ()\n{\n  // const [planetsWithSpacecrafts, setPlanetsWithSpacecrafts] = useState([]);\n  // const {isLoading, enableLoading, disableLoading} = useContext(LoadingContext);\n  // const [selectedPlanetId, setSelectedPlanetId] = useState();\n  // const [selectedSpacecraftId, setSelectedSpacecraftId] = useState();\n\n  // async function getPlanetsWithSpacecrafts ()\n  // {\n  //   const {data: planets, isError: isErrorPlanets} = await SpaceTravelApi.getPlanets();\n  //   const {data: spacecrafts, isError: isErrorSpacecrafts} = await SpaceTravelApi.getSpacecrafts();\n\n  //   if (!isErrorPlanets && !isErrorSpacecrafts)\n  //   {\n  //     for (const planet of planets)\n  //     {\n  //       planet.spacecrafts = [];\n\n  //       for (const spacecraft of spacecrafts)\n  //       {\n  //         if (planet.id === spacecraft.currentLocation)\n  //         {\n  //           planet.spacecrafts.push(spacecraft);\n  //         }\n  //       }\n  //     }\n\n  //     setPlanetsWithSpacecrafts(planets);\n  //   }\n  // }\n\n  // useEffect(() =>\n  //           {\n  //             async function runGetPlanetsWithSpacecrafts ()\n  //             {\n  //               enableLoading();\n  //               await getPlanetsWithSpacecrafts();\n  //               disableLoading();\n  //             }\n\n  //             runGetPlanetsWithSpacecrafts();\n  //           },\n  //           [enableLoading, disableLoading]\n  // );\n\n  // function handleClickOfPlanet (event, id)\n  // {\n  //   if (!isLoading)\n  //   {\n  //     setSelectedPlanetId(id);\n  //   }\n  // }\n\n  // async function handleClickOfSpacecraft (event, spacecraftId, planetId)\n  // {\n  //   if (!isLoading && Number.isInteger(selectedPlanetId) && selectedPlanetId !== planetId)\n  //   {\n  //     setSelectedSpacecraftId(spacecraftId);\n\n  //     enableLoading();\n\n  //     const {isError} = await SpaceTravelApi.sendSpacecraftToPlanet({spacecraftId, targetPlanetId: selectedPlanetId});\n  //     if (!isError)\n  //     {\n  //       await getPlanetsWithSpacecrafts();\n  //       setSelectedPlanetId(null);\n  //       setSelectedSpacecraftId(null);\n  //     }\n\n  //     disableLoading();\n  //   }\n  // }\n\n  return (\n    <>\n      {\n        planetsWithSpacecrafts.map(\n          (planet, index) =>\n            <div\n              key={index}\n              className={styles[\"planetWithSpacecrafts\"]}\n            >\n              <div\n                className={`${styles[\"planet\"]} ${selectedPlanetId === planet.id && styles[\"planet--selected\"]}`}\n                onClick={(event) => handleClickOfPlanet(event, planet.id)}\n              >\n                <div className={styles[\"planet__imageContainer\"]}>\n                  <img\n                    src={planet.pictureUrl}\n                    alt={`The planet ${planet.name}`}\n                    className={styles[\"planet__image\"]}\n                  />\n                </div>\n\n                <div className={styles[\"planet__info\"]}>\n                  <div>{planet.name}</div>\n                  <div>{planet.currentPopulation}</div>\n                </div>\n              </div>\n\n              <div className={styles[\"planet__spacecrafts\"]}>\n                {\n                  planet.spacecrafts.map((spacecraft, index) =>\n                                           <div\n                                             key={index}\n                                             className={`${styles[\"planet__spacecraft\"]} ${selectedSpacecraftId === spacecraft.id && styles[\"planet__spacecraft--selected\"]}`}\n                                             onClick={(event) => handleClickOfSpacecraft(event, spacecraft.id, planet.id)}\n                                           >\n                                             <div className={styles[\"planet__spacecraft__imageContainer\"]}>\n                                               {\n                                                 spacecraft.pictureUrl\n                                                 ?\n                                                 <img\n                                                   src={spacecraft.pictureUrl}\n                                                   alt={`The spacecraft ${spacecraft.name}`}\n                                                   className={styles[\"planet__spacecraft__image\"]}\n                                                 />\n                                                 :\n                                                 <span className={styles[\"planet__spacecraft__image--default\"]}>🚀</span>\n                                               }\n\n                                             </div>\n                                             <div className={\"planet__spacecraft__info\"}>\n                                               <div>{spacecraft.name}</div>\n                                               <div>{spacecraft.capacity}</div>\n                                             </div>\n                                           </div>\n                  )\n                }\n              </div>\n            </div>\n        )\n      }\n    </>\n  );\n}\n\nexport default Planets;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
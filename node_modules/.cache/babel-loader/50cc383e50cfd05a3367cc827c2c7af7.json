{"ast":null,"code":"var _jsxFileName = \"/home/joshua/finals-homeworks/guided-capstone-project-starter-code/guided-capstone-project/src/pages/Planets/Planets.js\";\n// import {useState, useEffect, useContext} from \"react\";\nimport React from \"react\";\n\n// import styles from \"./Planets.module.css\";\n// import {LoadingContext} from \"../../context/LoadingProvider\";\n// import SpaceTravelApi from \"../../services/SpaceTravelApi\";\n\nfunction Planets() {\n  const [planetsWithSpacecrafts, setPlanetsWithSpacecrafts] = useState([]);\n  const {\n    isLoading,\n    enableLoading,\n    disableLoading\n  } = useContext(LoadingContext);\n  const [selectedPlanetId, setSelectedPlanetId] = useState();\n  const [selectedSpacecraftId, setSelectedSpacecraftId] = useState();\n  async function getPlanetsWithSpacecrafts() {\n    const {\n      data: planets,\n      isError: isErrorPlanets\n    } = await SpaceTravelApi.getPlanets();\n    const {\n      data: spacecrafts,\n      isError: isErrorSpacecrafts\n    } = await SpaceTravelApi.getSpacecrafts();\n    if (!isErrorPlanets && !isErrorSpacecrafts) {\n      for (const planet of planets) {\n        planet.spacecrafts = [];\n        for (const spacecraft of spacecrafts) {\n          if (planet.id === spacecraft.currentLocation) {\n            planet.spacecrafts.push(spacecraft);\n          }\n        }\n      }\n      setPlanetsWithSpacecrafts(planets);\n    }\n  }\n  useEffect(() => {\n    async function runGetPlanetsWithSpacecrafts() {\n      enableLoading();\n      await getPlanetsWithSpacecrafts();\n      disableLoading();\n    }\n    runGetPlanetsWithSpacecrafts();\n  }, [enableLoading, disableLoading]);\n  function handleClickOfPlanet(event, id) {\n    if (!isLoading) {\n      setSelectedPlanetId(id);\n    }\n  }\n  async function handleClickOfSpacecraft(event, spacecraftId, planetId) {\n    if (!isLoading && Number.isInteger(selectedPlanetId) && selectedPlanetId !== planetId) {\n      setSelectedSpacecraftId(spacecraftId);\n      enableLoading();\n      const {\n        isError\n      } = await SpaceTravelApi.sendSpacecraftToPlanet({\n        spacecraftId,\n        targetPlanetId: selectedPlanetId\n      });\n      if (!isError) {\n        await getPlanetsWithSpacecrafts();\n        setSelectedPlanetId(null);\n        setSelectedSpacecraftId(null);\n      }\n      disableLoading();\n    }\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, \"Y esta tambien?\"));\n}\nexport default Planets;","map":{"version":3,"names":["React","Planets","planetsWithSpacecrafts","setPlanetsWithSpacecrafts","useState","isLoading","enableLoading","disableLoading","useContext","LoadingContext","selectedPlanetId","setSelectedPlanetId","selectedSpacecraftId","setSelectedSpacecraftId","getPlanetsWithSpacecrafts","data","planets","isError","isErrorPlanets","SpaceTravelApi","getPlanets","spacecrafts","isErrorSpacecrafts","getSpacecrafts","planet","spacecraft","id","currentLocation","push","useEffect","runGetPlanetsWithSpacecrafts","handleClickOfPlanet","event","handleClickOfSpacecraft","spacecraftId","planetId","Number","isInteger","sendSpacecraftToPlanet","targetPlanetId","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/joshua/finals-homeworks/guided-capstone-project-starter-code/guided-capstone-project/src/pages/Planets/Planets.js"],"sourcesContent":["// import {useState, useEffect, useContext} from \"react\";\nimport React from \"react\";\n\n// import styles from \"./Planets.module.css\";\n// import {LoadingContext} from \"../../context/LoadingProvider\";\n// import SpaceTravelApi from \"../../services/SpaceTravelApi\";\n\nfunction Planets ()\n{\n  const [planetsWithSpacecrafts, setPlanetsWithSpacecrafts] = useState([]);\n  const {isLoading, enableLoading, disableLoading} = useContext(LoadingContext);\n  const [selectedPlanetId, setSelectedPlanetId] = useState();\n  const [selectedSpacecraftId, setSelectedSpacecraftId] = useState();\n\n  async function getPlanetsWithSpacecrafts ()\n  {\n    const {data: planets, isError: isErrorPlanets} = await SpaceTravelApi.getPlanets();\n    const {data: spacecrafts, isError: isErrorSpacecrafts} = await SpaceTravelApi.getSpacecrafts();\n\n    if (!isErrorPlanets && !isErrorSpacecrafts)\n    {\n      for (const planet of planets)\n      {\n        planet.spacecrafts = [];\n\n        for (const spacecraft of spacecrafts)\n        {\n          if (planet.id === spacecraft.currentLocation)\n          {\n            planet.spacecrafts.push(spacecraft);\n          }\n        }\n      }\n\n      setPlanetsWithSpacecrafts(planets);\n    }\n  }\n\n  useEffect(() =>\n            {\n              async function runGetPlanetsWithSpacecrafts ()\n              {\n                enableLoading();\n                await getPlanetsWithSpacecrafts();\n                disableLoading();\n              }\n\n              runGetPlanetsWithSpacecrafts();\n            },\n            [enableLoading, disableLoading]\n  );\n\n  function handleClickOfPlanet (event, id)\n  {\n    if (!isLoading)\n    {\n      setSelectedPlanetId(id);\n    }\n  }\n\n  async function handleClickOfSpacecraft (event, spacecraftId, planetId)\n  {\n    if (!isLoading && Number.isInteger(selectedPlanetId) && selectedPlanetId !== planetId)\n    {\n      setSelectedSpacecraftId(spacecraftId);\n\n      enableLoading();\n\n      const {isError} = await SpaceTravelApi.sendSpacecraftToPlanet({spacecraftId, targetPlanetId: selectedPlanetId});\n      if (!isError)\n      {\n        await getPlanetsWithSpacecrafts();\n        setSelectedPlanetId(null);\n        setSelectedSpacecraftId(null);\n      }\n\n      disableLoading();\n    }\n  }\n\n  return (\n    <>\n      <div>\n        Y esta tambien?\n      </div>\n    </>\n  );\n}\n\nexport default Planets;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;;AAEA,SAASC,OAAOA,CAAA,EAChB;EACE,MAAM,CAACC,sBAAsB,EAAEC,yBAAyB,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EACxE,MAAM;IAACC,SAAS;IAAEC,aAAa;IAAEC;EAAc,CAAC,GAAGC,UAAU,CAACC,cAAc,CAAC;EAC7E,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGP,QAAQ,CAAC,CAAC;EAC1D,MAAM,CAACQ,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGT,QAAQ,CAAC,CAAC;EAElE,eAAeU,yBAAyBA,CAAA,EACxC;IACE,MAAM;MAACC,IAAI,EAAEC,OAAO;MAAEC,OAAO,EAAEC;IAAc,CAAC,GAAG,MAAMC,cAAc,CAACC,UAAU,CAAC,CAAC;IAClF,MAAM;MAACL,IAAI,EAAEM,WAAW;MAAEJ,OAAO,EAAEK;IAAkB,CAAC,GAAG,MAAMH,cAAc,CAACI,cAAc,CAAC,CAAC;IAE9F,IAAI,CAACL,cAAc,IAAI,CAACI,kBAAkB,EAC1C;MACE,KAAK,MAAME,MAAM,IAAIR,OAAO,EAC5B;QACEQ,MAAM,CAACH,WAAW,GAAG,EAAE;QAEvB,KAAK,MAAMI,UAAU,IAAIJ,WAAW,EACpC;UACE,IAAIG,MAAM,CAACE,EAAE,KAAKD,UAAU,CAACE,eAAe,EAC5C;YACEH,MAAM,CAACH,WAAW,CAACO,IAAI,CAACH,UAAU,CAAC;UACrC;QACF;MACF;MAEAtB,yBAAyB,CAACa,OAAO,CAAC;IACpC;EACF;EAEAa,SAAS,CAAC,MACA;IACE,eAAeC,4BAA4BA,CAAA,EAC3C;MACExB,aAAa,CAAC,CAAC;MACf,MAAMQ,yBAAyB,CAAC,CAAC;MACjCP,cAAc,CAAC,CAAC;IAClB;IAEAuB,4BAA4B,CAAC,CAAC;EAChC,CAAC,EACD,CAACxB,aAAa,EAAEC,cAAc,CACxC,CAAC;EAED,SAASwB,mBAAmBA,CAAEC,KAAK,EAAEN,EAAE,EACvC;IACE,IAAI,CAACrB,SAAS,EACd;MACEM,mBAAmB,CAACe,EAAE,CAAC;IACzB;EACF;EAEA,eAAeO,uBAAuBA,CAAED,KAAK,EAAEE,YAAY,EAAEC,QAAQ,EACrE;IACE,IAAI,CAAC9B,SAAS,IAAI+B,MAAM,CAACC,SAAS,CAAC3B,gBAAgB,CAAC,IAAIA,gBAAgB,KAAKyB,QAAQ,EACrF;MACEtB,uBAAuB,CAACqB,YAAY,CAAC;MAErC5B,aAAa,CAAC,CAAC;MAEf,MAAM;QAACW;MAAO,CAAC,GAAG,MAAME,cAAc,CAACmB,sBAAsB,CAAC;QAACJ,YAAY;QAAEK,cAAc,EAAE7B;MAAgB,CAAC,CAAC;MAC/G,IAAI,CAACO,OAAO,EACZ;QACE,MAAMH,yBAAyB,CAAC,CAAC;QACjCH,mBAAmB,CAAC,IAAI,CAAC;QACzBE,uBAAuB,CAAC,IAAI,CAAC;MAC/B;MAEAN,cAAc,CAAC,CAAC;IAClB;EACF;EAEA,oBACEP,KAAA,CAAAwC,aAAA,CAAAxC,KAAA,CAAAyC,QAAA,qBACEzC,KAAA,CAAAwC,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAK,iBAEA,CACL,CAAC;AAEP;AAEA,eAAe9C,OAAO"},"metadata":{},"sourceType":"module"}